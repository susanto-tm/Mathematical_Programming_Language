
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONDleftPLUSMINUSleftMULDIVMODrightPOWrightNEGATEACOS AND ASIN ATAN BREAK CASE COLON COMMA COS COSH DEFAULT DIFF DIV DIVEQUALS ELLIPSIS ELSE EQ EQUALS FALSE FLOAT FLOATCONST FOR FUNC GE GT IDENTIFIER IF INT INTCONST INTEGRATE LBRACE LBRACKET LE LEN LET LIST LPAREN LT MAX MIN MINUS MINUSEQUALS MINUSMINUS MOD MODEQUALS MUL MULEQUALS NE NOT NULL OR PLUS PLUSEQUALS PLUSPLUS POW POWEQUALS PRINT RANGE RBRACE RBRACKET RETURN RPAREN SEMICOLON SIN SINH STR STRINGCONST SWITCH TAN TANH TRUE TYPE WALRUS\n        program : commands\n        \n        commands : commands basic_block\n                 | empty\n        \n        basic_block : line_statement\n                    | basic_block line_statement\n        \n        line_statement : statement SEMICOLON\n        \n        line_statement : if_line\n                       | if_line else_line\n        \n        line_statement : for_line\n                       | while_line\n                       | func_line\n                       | switch_line\n        \n        statement : PRINT LPAREN expr_list RPAREN\n        \n        statement : LET IDENTIFIER EQUALS expr\n                  | LET IDENTIFIER\n        \n        statement : IDENTIFIER EQUALS expr\n        \n        statement : IDENTIFIER PLUSEQUALS expr\n                  | IDENTIFIER MINUSEQUALS expr\n                  | IDENTIFIER MULEQUALS expr\n                  | IDENTIFIER DIVEQUALS expr\n                  | IDENTIFIER MODEQUALS expr\n                  | IDENTIFIER POWEQUALS expr\n        \n        statement : incr_decr\n        \n        statement : IDENTIFIER LBRACKET expr_list RBRACKET EQUALS expr\n        \n        statement : func_call\n        \n        statement : IDENTIFIER LPAREN expr_list RPAREN EQUALS expr\n        \n        statement : RETURN expr_list\n        \n        statement : BREAK\n        \n        expr_list : expr\n                  | cond_list\n                  | expr_list COMMA expr\n                  | empty\n        \n        expr : LET IDENTIFIER\n        \n        expr : expr PLUS expr\n             | expr MINUS expr\n             | expr MUL expr\n             | expr DIV expr\n             | expr MOD expr\n             | expr POW expr\n             | expr LE expr\n             | expr GE expr\n             | expr LT expr\n             | expr GT expr\n             | expr EQ expr\n             | expr NE expr\n        \n        expr : MINUS expr %prec NEGATE\n        \n        incr_decr : IDENTIFIER PLUSPLUS\n                  | IDENTIFIER MINUSMINUS\n        \n        expr : IDENTIFIER\n        \n        expr : INTCONST\n        \n        expr : FLOATCONST\n        \n        expr : STRINGCONST\n        \n        expr : LBRACKET expr_list RBRACKET\n        \n        expr : LBRACKET range RBRACKET\n        \n        expr : IDENTIFIER LBRACKET expr_list RBRACKET\n        \n        expr : expr COLON expr\n             | expr COLON expr COLON expr\n        \n        expr : TRUE\n             | FALSE\n        \n        expr : NULL\n        \n        expr : LPAREN expr RPAREN\n        \n        expr : incr_decr\n        \n        expr : func_call\n        \n        expr : LEN LPAREN expr RPAREN\n        \n        expr : MIN LPAREN expr_list RPAREN\n        \n        expr : MAX LPAREN expr_list RPAREN\n        \n        expr : INT LPAREN expr RPAREN\n             | FLOAT LPAREN expr RPAREN\n             | STR LPAREN expr RPAREN\n             | LIST LPAREN expr RPAREN\n        \n        expr : TYPE LPAREN expr RPAREN\n        \n        expr : SIN LPAREN expr_list RPAREN\n             | COS LPAREN expr_list RPAREN\n             | TAN LPAREN expr_list RPAREN\n             | ASIN LPAREN expr_list RPAREN\n             | ACOS LPAREN expr_list RPAREN\n             | ATAN LPAREN expr_list RPAREN\n             | SINH LPAREN expr_list RPAREN\n             | COSH LPAREN expr_list RPAREN\n             | TANH LPAREN expr_list RPAREN\n        \n        expr : INTEGRATE LPAREN expr_list RPAREN\n        \n        expr : DIFF LPAREN expr_list RPAREN\n        \n        cond_list : expr %prec COND\n                  | NOT expr\n                  | cond_list AND expr\n                  | cond_list OR expr\n        \n        if_line : IF cond_list LBRACE basic_block RBRACE\n        \n        else_line : ELSE LBRACE basic_block RBRACE\n        \n        for_line : FOR IDENTIFIER WALRUS RANGE range LBRACE basic_block RBRACE\n        \n        for_line : FOR IDENTIFIER WALRUS RANGE expr LBRACE basic_block RBRACE\n        \n        while_line : FOR cond_list LBRACE basic_block RBRACE\n        \n        range : expr ELLIPSIS expr\n              | expr ELLIPSIS expr COMMA expr\n        \n        func_line : FUNC IDENTIFIER LPAREN expr_list RPAREN LBRACE basic_block RBRACE\n        \n        func_call : IDENTIFIER LPAREN expr_list RPAREN\n        \n        switch_line : SWITCH LPAREN expr RPAREN LBRACE case_list RBRACE\n        \n        case_list : case_block\n                  | case_list case_block\n        \n        case_block : CASE expr LBRACE basic_block RBRACE\n        \n        case_block : DEFAULT LBRACE basic_block RBRACE\n        \n        empty :\n        '
    
_lr_action_items = {'PRINT':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,12,-3,12,-4,-7,-9,-10,-11,-12,-5,-6,-8,12,12,12,12,12,12,-88,-87,-91,12,12,12,12,12,12,-96,12,-89,-90,-94,12,12,12,]),'LET':([0,2,3,4,5,7,8,9,10,11,17,19,20,23,24,25,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,83,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,169,190,191,192,195,196,197,198,221,224,230,231,232,233,236,239,240,241,242,245,246,247,248,249,250,251,],[-101,13,-3,13,-4,-7,-9,-10,-11,-12,44,44,44,-5,-6,-8,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,13,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,13,13,44,13,44,13,44,13,-88,44,44,44,-87,-91,44,13,13,13,44,13,13,13,-96,13,-89,-90,-94,13,13,13,]),'IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,13,17,19,20,21,23,24,25,27,29,30,31,32,33,34,35,36,37,44,46,50,54,76,82,83,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,169,190,191,192,195,196,197,198,221,224,230,231,232,233,236,239,240,241,242,245,246,247,248,249,250,251,],[-101,14,-3,14,-4,-7,-9,-10,-11,-12,28,45,45,79,81,-5,-6,-8,45,45,45,45,45,45,45,45,45,45,111,45,45,45,45,45,14,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,14,14,45,14,45,14,45,14,-88,45,45,45,-87,-91,45,14,14,14,45,14,14,14,-96,14,-89,-90,-94,14,14,14,]),'RETURN':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,17,-3,17,-4,-7,-9,-10,-11,-12,-5,-6,-8,17,17,17,17,17,17,-88,-87,-91,17,17,17,17,17,17,-96,17,-89,-90,-94,17,17,17,]),'BREAK':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,18,-3,18,-4,-7,-9,-10,-11,-12,-5,-6,-8,18,18,18,18,18,18,-88,-87,-91,18,18,18,18,18,18,-96,18,-89,-90,-94,18,18,18,]),'IF':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,19,-3,19,-4,-7,-9,-10,-11,-12,-5,-6,-8,19,19,19,19,19,19,-88,-87,-91,19,19,19,19,19,19,-96,19,-89,-90,-94,19,19,19,]),'FOR':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,20,-3,20,-4,-7,-9,-10,-11,-12,-5,-6,-8,20,20,20,20,20,20,-88,-87,-91,20,20,20,20,20,20,-96,20,-89,-90,-94,20,20,20,]),'FUNC':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,21,-3,21,-4,-7,-9,-10,-11,-12,-5,-6,-8,21,21,21,21,21,21,-88,-87,-91,21,21,21,21,21,21,-96,21,-89,-90,-94,21,21,21,]),'SWITCH':([0,2,3,4,5,7,8,9,10,11,23,24,25,83,139,141,144,190,192,195,221,224,231,232,233,239,240,241,242,245,246,247,248,249,250,251,],[-101,22,-3,22,-4,-7,-9,-10,-11,-12,-5,-6,-8,22,22,22,22,22,22,-88,-87,-91,22,22,22,22,22,22,-96,22,-89,-90,-94,22,22,22,]),'$end':([0,1,2,3,4,5,7,8,9,10,11,23,24,25,195,221,224,242,246,247,248,],[-101,0,-1,-3,-2,-4,-7,-9,-10,-11,-12,-5,-6,-8,-88,-87,-91,-96,-89,-90,-94,]),'RBRACE':([5,7,8,9,10,11,23,24,25,144,190,192,195,221,224,234,235,239,240,241,242,243,246,247,248,250,251,252,253,],[-4,-7,-9,-10,-11,-12,-5,-6,-8,195,221,224,-88,-87,-91,242,-97,246,247,248,-96,-98,-89,-90,-94,252,253,-100,-99,]),'SEMICOLON':([6,15,16,17,18,28,38,39,40,41,42,43,45,47,48,49,51,52,53,55,56,86,87,88,89,90,91,92,111,114,138,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,227,228,229,],[24,-23,-25,-101,-28,-15,-47,-48,-27,-29,-30,-32,-49,-50,-51,-52,-58,-59,-60,-62,-63,-16,-17,-18,-19,-20,-21,-22,-33,-46,-84,-13,-14,-95,-31,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,-53,-54,-61,-55,-95,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-24,-26,-56,]),'ELSE':([7,221,],[26,-87,]),'LPAREN':([12,14,17,19,20,22,27,29,30,31,32,33,34,35,36,37,45,46,50,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[27,37,54,54,54,82,54,54,54,54,54,54,54,54,54,54,113,54,54,54,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,54,113,142,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'EQUALS':([14,28,147,148,],[29,85,196,197,]),'PLUSEQUALS':([14,],[30,]),'MINUSEQUALS':([14,],[31,]),'MULEQUALS':([14,],[32,]),'DIVEQUALS':([14,],[33,]),'MODEQUALS':([14,],[34,]),'POWEQUALS':([14,],[35,]),'LBRACKET':([14,17,19,20,27,29,30,31,32,33,34,35,36,37,45,46,50,54,76,79,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[36,50,50,50,50,50,50,50,50,50,50,50,50,50,112,50,50,50,50,112,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'PLUSPLUS':([14,45,79,],[38,38,38,]),'MINUSMINUS':([14,45,79,],[39,39,39,]),'MINUS':([17,19,20,27,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,52,53,54,55,56,76,78,79,82,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,170,171,174,175,176,177,178,191,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,230,236,238,244,],[46,46,46,46,46,46,46,46,46,46,46,46,46,-47,-48,97,-49,46,-50,-51,-52,46,-58,-59,-60,46,-62,-63,46,97,-49,46,46,97,97,97,97,97,97,97,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-33,46,46,-46,97,97,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,97,46,97,97,97,-34,-35,-36,-37,-38,-39,97,97,97,97,97,97,97,97,97,-53,-54,46,-61,97,97,97,97,97,97,46,46,46,46,-55,-95,97,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,97,97,97,97,46,46,97,97,]),'INTCONST':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FLOATCONST':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRINGCONST':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'TRUE':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'FALSE':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'NULL':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LEN':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'MIN':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'MAX':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'INT':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FLOAT':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'STR':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LIST':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'TYPE':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'SIN':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'COS':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'TAN':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'ASIN':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'ACOS':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'ATAN':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'SINH':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'COSH':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'TANH':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'INTEGRATE':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'DIFF':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'NOT':([17,19,20,27,36,37,50,112,113,120,121,127,128,129,130,131,132,133,134,135,136,137,142,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'COMMA':([17,27,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,55,56,84,93,94,111,112,113,114,115,117,120,121,127,128,129,130,131,132,133,134,135,136,137,138,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,172,173,179,180,181,182,183,184,185,186,187,188,189,193,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,],[-101,-101,-101,-101,-47,-48,95,-29,-30,-32,-49,-50,-51,-52,-101,-58,-59,-60,-62,-63,95,95,95,-33,-101,-101,-46,95,-29,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-84,-101,-31,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,95,95,-53,-54,-61,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-55,-95,230,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-56,]),'LBRACE':([26,38,39,45,47,48,49,51,52,53,55,56,77,78,79,80,111,114,138,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,194,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,225,229,237,238,244,],[83,-47,-48,-49,-50,-51,-52,-58,-59,-60,-62,-63,139,-83,-49,141,-33,-46,-84,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,-53,-54,-61,226,-55,-95,-92,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,231,232,233,-56,245,-93,249,]),'RPAREN':([27,37,38,39,41,42,43,45,47,48,49,51,52,53,55,56,84,94,111,113,114,118,120,121,127,128,129,130,131,132,133,134,135,136,137,138,142,143,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,193,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,],[-101,-101,-47,-48,-29,-30,-32,-49,-50,-51,-52,-58,-59,-60,-62,-63,145,148,-33,-101,-46,170,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-84,-101,194,-31,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,200,-53,-54,-61,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,225,-55,-95,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-56,]),'RBRACKET':([36,38,39,41,42,43,45,47,48,49,50,51,52,53,55,56,93,111,112,114,115,116,117,138,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,238,],[-101,-47,-48,-29,-30,-32,-49,-50,-51,-52,-101,-58,-59,-60,-62,-63,147,-33,-101,-46,167,168,-29,-84,-31,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,199,-53,-54,-61,-55,-95,-92,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-56,-93,]),'PLUS':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,96,-49,-50,-51,-52,-58,-59,-60,-62,-63,96,-49,96,96,96,96,96,96,96,-33,-46,96,96,96,96,96,96,-34,-35,-36,-37,-38,-39,96,96,96,96,96,96,96,96,96,-53,-54,-61,96,96,96,96,96,96,-55,-95,96,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,96,96,96,96,96,96,]),'MUL':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,98,-49,-50,-51,-52,-58,-59,-60,-62,-63,98,-49,98,98,98,98,98,98,98,-33,-46,98,98,98,98,98,98,98,98,-36,-37,-38,-39,98,98,98,98,98,98,98,98,98,-53,-54,-61,98,98,98,98,98,98,-55,-95,98,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,98,98,98,98,98,98,]),'DIV':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,99,-49,-50,-51,-52,-58,-59,-60,-62,-63,99,-49,99,99,99,99,99,99,99,-33,-46,99,99,99,99,99,99,99,99,-36,-37,-38,-39,99,99,99,99,99,99,99,99,99,-53,-54,-61,99,99,99,99,99,99,-55,-95,99,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,99,99,99,99,99,99,]),'MOD':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,100,-49,-50,-51,-52,-58,-59,-60,-62,-63,100,-49,100,100,100,100,100,100,100,-33,-46,100,100,100,100,100,100,100,100,-36,-37,-38,-39,100,100,100,100,100,100,100,100,100,-53,-54,-61,100,100,100,100,100,100,-55,-95,100,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,100,100,100,100,100,100,]),'POW':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,101,-49,-50,-51,-52,-58,-59,-60,-62,-63,101,-49,101,101,101,101,101,101,101,-33,-46,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-53,-54,-61,101,101,101,101,101,101,-55,-95,101,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,101,101,101,101,101,101,]),'LE':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,102,-49,-50,-51,-52,-58,-59,-60,-62,-63,102,-49,102,102,102,102,102,102,102,-33,-46,102,102,102,102,102,102,-34,-35,-36,-37,-38,-39,102,102,102,102,102,102,102,102,102,-53,-54,-61,102,102,102,102,102,102,-55,-95,102,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,102,102,102,102,102,102,]),'GE':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,103,-49,-50,-51,-52,-58,-59,-60,-62,-63,103,-49,103,103,103,103,103,103,103,-33,-46,103,103,103,103,103,103,-34,-35,-36,-37,-38,-39,103,103,103,103,103,103,103,103,103,-53,-54,-61,103,103,103,103,103,103,-55,-95,103,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,103,103,103,103,103,103,]),'LT':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,104,-49,-50,-51,-52,-58,-59,-60,-62,-63,104,-49,104,104,104,104,104,104,104,-33,-46,104,104,104,104,104,104,-34,-35,-36,-37,-38,-39,104,104,104,104,104,104,104,104,104,-53,-54,-61,104,104,104,104,104,104,-55,-95,104,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,104,104,104,104,104,104,]),'GT':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,105,-49,-50,-51,-52,-58,-59,-60,-62,-63,105,-49,105,105,105,105,105,105,105,-33,-46,105,105,105,105,105,105,-34,-35,-36,-37,-38,-39,105,105,105,105,105,105,105,105,105,-53,-54,-61,105,105,105,105,105,105,-55,-95,105,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,105,105,105,105,105,105,]),'EQ':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,106,-49,-50,-51,-52,-58,-59,-60,-62,-63,106,-49,106,106,106,106,106,106,106,-33,-46,106,106,106,106,106,106,-34,-35,-36,-37,-38,-39,106,106,106,106,106,106,106,106,106,-53,-54,-61,106,106,106,106,106,106,-55,-95,106,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,106,106,106,106,106,106,]),'NE':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,107,-49,-50,-51,-52,-58,-59,-60,-62,-63,107,-49,107,107,107,107,107,107,107,-33,-46,107,107,107,107,107,107,-34,-35,-36,-37,-38,-39,107,107,107,107,107,107,107,107,107,-53,-54,-61,107,107,107,107,107,107,-55,-95,107,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,107,107,107,107,107,107,]),'COLON':([38,39,41,45,47,48,49,51,52,53,55,56,78,79,86,87,88,89,90,91,92,111,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,171,174,175,176,177,178,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,227,228,229,238,244,],[-47,-48,108,-49,-50,-51,-52,-58,-59,-60,-62,-63,108,-49,108,108,108,108,108,108,108,-33,-46,108,108,108,108,108,108,-34,-35,-36,-37,-38,-39,108,108,108,108,108,108,198,108,108,-53,-54,-61,108,108,108,108,108,108,-55,-95,108,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,108,108,108,198,108,108,]),'AND':([38,39,41,42,45,47,48,49,51,52,53,55,56,77,78,79,80,111,114,117,138,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,],[-47,-48,-83,109,-49,-50,-51,-52,-58,-59,-60,-62,-63,109,-83,-49,109,-33,-46,-83,-84,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,-53,-54,-61,-55,-95,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-56,]),'OR':([38,39,41,42,45,47,48,49,51,52,53,55,56,77,78,79,80,111,114,117,138,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,170,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,],[-47,-48,-83,110,-49,-50,-51,-52,-58,-59,-60,-62,-63,110,-83,-49,110,-33,-46,-83,-84,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-85,-86,-53,-54,-61,-55,-95,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-56,]),'ELLIPSIS':([38,39,45,47,48,49,51,52,53,55,56,111,114,117,150,151,152,153,154,155,156,157,158,159,160,161,162,167,168,170,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,229,],[-47,-48,-49,-50,-51,-52,-58,-59,-60,-62,-63,-33,-46,169,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-56,-53,-54,-61,-55,-95,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,169,-56,]),'WALRUS':([79,],[140,]),'RANGE':([140,],[191,]),'CASE':([226,234,235,243,252,253,],[236,236,-97,-98,-100,-99,]),'DEFAULT':([226,234,235,243,252,253,],[237,237,-97,-98,-100,-99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'commands':([0,],[2,]),'empty':([0,17,27,36,37,50,112,113,120,121,127,128,129,130,131,132,133,134,135,136,137,142,],[3,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'basic_block':([2,83,139,141,231,232,233,245,249,],[4,144,190,192,239,240,241,250,251,]),'line_statement':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[5,23,5,5,5,23,23,23,5,5,5,23,23,23,5,5,23,23,]),'statement':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_line':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for_line':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_line':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'func_line':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'switch_line':([2,4,83,139,141,144,190,192,231,232,233,239,240,241,245,249,250,251,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'incr_decr':([2,4,17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,83,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,169,190,191,192,196,197,198,230,231,232,233,236,239,240,241,245,249,250,251,],[15,15,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,15,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,15,15,55,15,55,15,55,15,55,55,55,55,15,15,15,55,15,15,15,15,15,15,15,]),'func_call':([2,4,17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,83,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,169,190,191,192,196,197,198,230,231,232,233,236,239,240,241,245,249,250,251,],[16,16,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,16,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,16,16,56,16,56,16,56,16,56,56,56,56,16,16,16,56,16,16,16,16,16,16,16,]),'else_line':([7,],[25,]),'expr_list':([17,27,36,37,50,112,113,120,121,127,128,129,130,131,132,133,134,135,136,137,142,],[40,84,93,94,115,165,166,172,173,179,180,181,182,183,184,185,186,187,188,189,193,]),'expr':([17,19,20,27,29,30,31,32,33,34,35,36,37,46,50,54,76,82,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,169,191,196,197,198,230,236,],[41,78,78,41,86,87,88,89,90,91,92,41,41,114,117,118,138,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,41,41,171,41,41,174,175,176,177,178,41,41,41,41,41,41,41,41,41,41,41,41,201,223,227,228,229,238,244,]),'cond_list':([17,19,20,27,36,37,50,112,113,120,121,127,128,129,130,131,132,133,134,135,136,137,142,],[42,77,80,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'range':([50,191,],[116,222,]),'case_list':([226,],[234,]),'case_block':([226,234,],[235,243,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> commands','program',1,'p_program','Parser.py',21),
  ('commands -> commands basic_block','commands',2,'p_commands','Parser.py',28),
  ('commands -> empty','commands',1,'p_commands','Parser.py',29),
  ('basic_block -> line_statement','basic_block',1,'p_basic_block','Parser.py',40),
  ('basic_block -> basic_block line_statement','basic_block',2,'p_basic_block','Parser.py',41),
  ('line_statement -> statement SEMICOLON','line_statement',2,'p_line_statement','Parser.py',50),
  ('line_statement -> if_line','line_statement',1,'p_if_else_statement','Parser.py',57),
  ('line_statement -> if_line else_line','line_statement',2,'p_if_else_statement','Parser.py',58),
  ('line_statement -> for_line','line_statement',1,'p_for_loop_statement','Parser.py',69),
  ('line_statement -> while_line','line_statement',1,'p_for_loop_statement','Parser.py',70),
  ('line_statement -> func_line','line_statement',1,'p_for_loop_statement','Parser.py',71),
  ('line_statement -> switch_line','line_statement',1,'p_for_loop_statement','Parser.py',72),
  ('statement -> PRINT LPAREN expr_list RPAREN','statement',4,'p_print_statement','Parser.py',78),
  ('statement -> LET IDENTIFIER EQUALS expr','statement',4,'p_assign','Parser.py',85),
  ('statement -> LET IDENTIFIER','statement',2,'p_assign','Parser.py',86),
  ('statement -> IDENTIFIER EQUALS expr','statement',3,'p_reassign','Parser.py',97),
  ('statement -> IDENTIFIER PLUSEQUALS expr','statement',3,'p_reassign_binop_equals','Parser.py',103),
  ('statement -> IDENTIFIER MINUSEQUALS expr','statement',3,'p_reassign_binop_equals','Parser.py',104),
  ('statement -> IDENTIFIER MULEQUALS expr','statement',3,'p_reassign_binop_equals','Parser.py',105),
  ('statement -> IDENTIFIER DIVEQUALS expr','statement',3,'p_reassign_binop_equals','Parser.py',106),
  ('statement -> IDENTIFIER MODEQUALS expr','statement',3,'p_reassign_binop_equals','Parser.py',107),
  ('statement -> IDENTIFIER POWEQUALS expr','statement',3,'p_reassign_binop_equals','Parser.py',108),
  ('statement -> incr_decr','statement',1,'p_incr_decr_statement','Parser.py',115),
  ('statement -> IDENTIFIER LBRACKET expr_list RBRACKET EQUALS expr','statement',6,'p_list_assign_statement','Parser.py',121),
  ('statement -> func_call','statement',1,'p_func_call_statement','Parser.py',127),
  ('statement -> IDENTIFIER LPAREN expr_list RPAREN EQUALS expr','statement',6,'p_func_math_statement','Parser.py',133),
  ('statement -> RETURN expr_list','statement',2,'p_return_statement','Parser.py',139),
  ('statement -> BREAK','statement',1,'p_break_statement','Parser.py',145),
  ('expr_list -> expr','expr_list',1,'p_expr_list','Parser.py',151),
  ('expr_list -> cond_list','expr_list',1,'p_expr_list','Parser.py',152),
  ('expr_list -> expr_list COMMA expr','expr_list',3,'p_expr_list','Parser.py',153),
  ('expr_list -> empty','expr_list',1,'p_expr_list','Parser.py',154),
  ('expr -> LET IDENTIFIER','expr',2,'p_assign_expr','Parser.py',165),
  ('expr -> expr PLUS expr','expr',3,'p_binop','Parser.py',171),
  ('expr -> expr MINUS expr','expr',3,'p_binop','Parser.py',172),
  ('expr -> expr MUL expr','expr',3,'p_binop','Parser.py',173),
  ('expr -> expr DIV expr','expr',3,'p_binop','Parser.py',174),
  ('expr -> expr MOD expr','expr',3,'p_binop','Parser.py',175),
  ('expr -> expr POW expr','expr',3,'p_binop','Parser.py',176),
  ('expr -> expr LE expr','expr',3,'p_binop','Parser.py',177),
  ('expr -> expr GE expr','expr',3,'p_binop','Parser.py',178),
  ('expr -> expr LT expr','expr',3,'p_binop','Parser.py',179),
  ('expr -> expr GT expr','expr',3,'p_binop','Parser.py',180),
  ('expr -> expr EQ expr','expr',3,'p_binop','Parser.py',181),
  ('expr -> expr NE expr','expr',3,'p_binop','Parser.py',182),
  ('expr -> MINUS expr','expr',2,'p_unary_negate','Parser.py',188),
  ('incr_decr -> IDENTIFIER PLUSPLUS','incr_decr',2,'p_increment_decrement','Parser.py',198),
  ('incr_decr -> IDENTIFIER MINUSMINUS','incr_decr',2,'p_increment_decrement','Parser.py',199),
  ('expr -> IDENTIFIER','expr',1,'p_iden','Parser.py',207),
  ('expr -> INTCONST','expr',1,'p_integer_const','Parser.py',213),
  ('expr -> FLOATCONST','expr',1,'p_float_const','Parser.py',219),
  ('expr -> STRINGCONST','expr',1,'p_string_const','Parser.py',225),
  ('expr -> LBRACKET expr_list RBRACKET','expr',3,'p_list_const','Parser.py',231),
  ('expr -> LBRACKET range RBRACKET','expr',3,'p_list_const_generate','Parser.py',237),
  ('expr -> IDENTIFIER LBRACKET expr_list RBRACKET','expr',4,'p_list_indexing','Parser.py',243),
  ('expr -> expr COLON expr','expr',3,'p_list_slicing','Parser.py',249),
  ('expr -> expr COLON expr COLON expr','expr',5,'p_list_slicing','Parser.py',250),
  ('expr -> TRUE','expr',1,'p_boolean','Parser.py',271),
  ('expr -> FALSE','expr',1,'p_boolean','Parser.py',272),
  ('expr -> NULL','expr',1,'p_null','Parser.py',284),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_paren','Parser.py',290),
  ('expr -> incr_decr','expr',1,'p_expr_incr_decr','Parser.py',296),
  ('expr -> func_call','expr',1,'p_func_call_expr','Parser.py',302),
  ('expr -> LEN LPAREN expr RPAREN','expr',4,'p_func_call_len','Parser.py',308),
  ('expr -> MIN LPAREN expr_list RPAREN','expr',4,'p_func_call_min','Parser.py',314),
  ('expr -> MAX LPAREN expr_list RPAREN','expr',4,'p_func_call_max','Parser.py',320),
  ('expr -> INT LPAREN expr RPAREN','expr',4,'p_func_call_typecast','Parser.py',326),
  ('expr -> FLOAT LPAREN expr RPAREN','expr',4,'p_func_call_typecast','Parser.py',327),
  ('expr -> STR LPAREN expr RPAREN','expr',4,'p_func_call_typecast','Parser.py',328),
  ('expr -> LIST LPAREN expr RPAREN','expr',4,'p_func_call_typecast','Parser.py',329),
  ('expr -> TYPE LPAREN expr RPAREN','expr',4,'p_func_call_type','Parser.py',335),
  ('expr -> SIN LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',341),
  ('expr -> COS LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',342),
  ('expr -> TAN LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',343),
  ('expr -> ASIN LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',344),
  ('expr -> ACOS LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',345),
  ('expr -> ATAN LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',346),
  ('expr -> SINH LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',347),
  ('expr -> COSH LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',348),
  ('expr -> TANH LPAREN expr_list RPAREN','expr',4,'p_func_call_trig','Parser.py',349),
  ('expr -> INTEGRATE LPAREN expr_list RPAREN','expr',4,'p_func_call_integrate','Parser.py',356),
  ('expr -> DIFF LPAREN expr_list RPAREN','expr',4,'p_func_call_derivative','Parser.py',363),
  ('cond_list -> expr','cond_list',1,'p_cond_list','Parser.py',370),
  ('cond_list -> NOT expr','cond_list',2,'p_cond_list','Parser.py',371),
  ('cond_list -> cond_list AND expr','cond_list',3,'p_cond_list','Parser.py',372),
  ('cond_list -> cond_list OR expr','cond_list',3,'p_cond_list','Parser.py',373),
  ('if_line -> IF cond_list LBRACE basic_block RBRACE','if_line',5,'p_if_stmt','Parser.py',382),
  ('else_line -> ELSE LBRACE basic_block RBRACE','else_line',4,'p_else_line','Parser.py',389),
  ('for_line -> FOR IDENTIFIER WALRUS RANGE range LBRACE basic_block RBRACE','for_line',8,'p_for_line','Parser.py',396),
  ('for_line -> FOR IDENTIFIER WALRUS RANGE expr LBRACE basic_block RBRACE','for_line',8,'p_for_line_single_range','Parser.py',402),
  ('while_line -> FOR cond_list LBRACE basic_block RBRACE','while_line',5,'p_while_line','Parser.py',412),
  ('range -> expr ELLIPSIS expr','range',3,'p_range_generator','Parser.py',418),
  ('range -> expr ELLIPSIS expr COMMA expr','range',5,'p_range_generator','Parser.py',419),
  ('func_line -> FUNC IDENTIFIER LPAREN expr_list RPAREN LBRACE basic_block RBRACE','func_line',8,'p_function_line','Parser.py',428),
  ('func_call -> IDENTIFIER LPAREN expr_list RPAREN','func_call',4,'p_function_call','Parser.py',434),
  ('switch_line -> SWITCH LPAREN expr RPAREN LBRACE case_list RBRACE','switch_line',7,'p_switch_line','Parser.py',440),
  ('case_list -> case_block','case_list',1,'p_case_list','Parser.py',446),
  ('case_list -> case_list case_block','case_list',2,'p_case_list','Parser.py',447),
  ('case_block -> CASE expr LBRACE basic_block RBRACE','case_block',5,'p_switch_case','Parser.py',456),
  ('case_block -> DEFAULT LBRACE basic_block RBRACE','case_block',4,'p_default_case','Parser.py',463),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',470),
]
